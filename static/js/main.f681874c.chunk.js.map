{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","components/Homepage.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","console","log","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","hoverable","millify","price","marketCap","change","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Panel","Collapse","Exchanges","exchangesList","exchanges","span","exchange","showArrow","header","marketShare","Homepage","globalStats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","newsArticle","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.f681874c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react'\r\nimport { Button, Menu, Typography, Avatar } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\r\nimport icon from '../images/cryptocurrency.png';\r\n\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true);\r\n    const [screenSize, setScreenSize] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        handleResize();\r\n\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (screenSize < 768) {\r\n            setActiveMenu(false);\r\n        } else {\r\n            setActiveMenu(true);\r\n        }\r\n    }, [screenSize])\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to='/'>Cryptoverse</Link>\r\n                </Typography.Title>\r\n                <Button className='menu-control-container' onClick={() => setActiveMenu(!activeMenu)}>\r\n                    <MenuOutlined />\r\n                </Button>\r\n            </div>\r\n            {activeMenu && (\r\n                <Menu theme=\"dark\">\r\n                    <Menu.Item icon={<HomeOutlined />}>\r\n                        <Link to='/'>Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<FundOutlined />}>\r\n                        <Link to='/cryptocurrencies'>Cryptocurrencies</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<MoneyCollectOutlined />}>\r\n                        <Link to='/exchanges'>Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<BulbOutlined />}>\r\n                        <Link to='/news'>News</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': '19bca11e6emshafbece8a1fbc433p1321e6jsn772b93723ed9'\r\n}\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com'\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders })\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}&x-access-token=i-have-to-migrate-to-v2`),\r\n            // query: (count) => createRequest(`/coins?limit=${count}`),\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest('/exchanges?x-access-token=i-have-to-migrate-to-v2'),\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}?x-access-token=i-have-to-migrate-to-v2`),\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}?x-access-token=i-have-to-migrate-to-v2`),\r\n        }),\r\n    })\r\n})\r\n\r\nexport const {\r\n    useGetCryptosQuery,\r\n    useGetCryptoDetailsQuery,\r\n    useGetCryptoHistoryQuery,\r\n    useGetExchangesQuery\r\n} = cryptoApi;\r\n\r\n// var options = {\r\n//     method: 'GET',\r\n//     url: 'https://coinranking1.p.rapidapi.com/stats',\r\n//     headers: {\r\n//         'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n//         'x-rapidapi-key': '19bca11e6emshafbece8a1fbc433p1321e6jsn772b93723ed9'\r\n//     }\r\n// };","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n    <div className=\"loader\">\r\n        <Spin />\r\n    </div>\r\n);\r\n\r\nexport default Loader;","import React, { useEffect, useState } from 'react'\r\nimport millify from 'millify'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Row, Col, Input } from 'antd'\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport Loader from './Loader'\r\n\r\n\r\nconst Cryptocurrencies = ({simplified}) => {\r\n    const count = simplified ? 10 : 100;\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    console.log(count);\r\n\r\n    useEffect(() => {\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n\r\n        setCryptos(filteredData);\r\n    }, [cryptosList, searchTerm])\r\n\r\n    console.log(cryptos);\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n                <div className='search-crypto'>\r\n                    <Input placeholder='Search Cryptocurrency' onChange={(e) => setSearchTerm(e.target.value)} />\r\n                </div>\r\n            )}\r\n\r\n            <Row gutter={[32, 32]} className='crypto-card-container' >\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} lg={6} className='crypto-card' key={currency.id} >\r\n                        <Link to={`/crypto/${currency.id}`}>\r\n                            <Card title={`${currency.rank}. ${currency.name}`} extra={<img className='crypto-image' src={currency.iconUrl} />} hoverable >\r\n                                <p>Price: ${millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}%</p>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { Col, Row, Typography } from 'antd'\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n    const coinPrice = [];\r\n    const coinTimestamp = [];\r\n\r\n    for(let i = 0; i < coinHistory?.data?.history?.length; i+=1) {\r\n        coinPrice.push(coinHistory.data.history[i].price)\r\n        coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\r\n    }\r\n\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            {\r\n                label: 'Price in USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#0071bd',\r\n                borderColor: '#0071bd'\r\n            }\r\n        ]\r\n    }\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='chart-header'>\r\n                <Title level={2} className='chart-title'>{coinName} Price Chart</Title>\r\n                <Col className='price-container'>\r\n                    <Title level={5} className='price-change'>{coinHistory?.data?.change}%</Title>\r\n                    <Title level={5} className='current-price'>Current {coinName} Price: $ {currentPrice}</Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import React, { useState } from 'react'\r\nimport HTMLReactParser from 'html-react-parser'\r\nimport { useParams } from 'react-router'\r\nimport millify from 'millify'\r\nimport { Col, Row, Typography, Select } from 'antd'\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi'\r\nimport LineChart from './LineChart'\r\nimport Loader from './Loader'\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const { coinId } = useParams();\r\n    const [timePeriod, setTimePeriod] = useState('7d');\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timePeriod });\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    if(isFetching) return <Loader />;\r\n\r\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    const stats = [\r\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n\r\n    const genericStats = [\r\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n        { title: 'Approved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n\r\n\r\n    return (\r\n        <Col className='coin-detail-container'>\r\n            <Col className='coin-heading-container'>\r\n                <Title level={2} className='coin-name'>\r\n                    {cryptoDetails.name} ({cryptoDetails.slug}) Price\r\n                </Title>\r\n                <p>\r\n                    {cryptoDetails.name} live price in US dollars.\r\n                    View value statistics, market cap and supply\r\n                </p>\r\n            </Col>\r\n            <Select defaultValue='7d' className='select-timeperiod' placeholder='Select Time Period' onChange={(value) => setTimePeriod(value)} >\r\n                {time.map((date) => <Option key={date}>{date}</Option>)}\r\n            </Select>\r\n            <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n            <Col className='stats-container'>\r\n                <Col className='coin-value-statistics'>\r\n                    <Col className='coin-value-statistics-heading'>\r\n                        <Title level={3} className='coin-details-heading'>\r\n                            {cryptoDetails.name} Value Statistics\r\n                        </Title>\r\n                        <p>\r\n                            An overview showing the stats of {cryptoDetails.name}\r\n                        </p>\r\n                    </Col>\r\n                    {stats.map(({icon, title, value}) => (\r\n                        <Col className='coin-stats'>\r\n                            <Col className='coin-stats-name'>\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className='stats'>{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n                <Col className='other-stats-info'>\r\n                    <Col className='coin-value-statistics-heading'>\r\n                        <Title level={3} className='coin-details-heading'>\r\n                            Other Statistics\r\n                        </Title>\r\n                        <p>\r\n                            An overview showing the stats of all cryptocurrencies\r\n                        </p>\r\n                    </Col>\r\n                    {genericStats.map(({icon, title, value}) => (\r\n                        <Col className='coin-stats'>\r\n                            <Col className='coin-stats-name'>\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className='stats'>{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n            <Col className='coin-desc-link'>\r\n                    <Row className='coin-desc'>\r\n                        <Title level={3} className='coin-details-heading'>\r\n                            What is {cryptoDetails.name}\r\n                            {HTMLReactParser(cryptoDetails.description)}\r\n                        </Title>\r\n                    </Row>\r\n                    <Col className='coin-links'>\r\n                        <Title level={3} className='coin-details-heading'>\r\n                            {cryptoDetails.name} Links\r\n                        </Title>\r\n                        {cryptoDetails.links.map((link) => (\r\n                            <Row className='coin-link' key={link.name}>\r\n                                <Title level={5} className='link-name'>\r\n                                    {link.type}\r\n                                </Title>\r\n                                <a href={link.url} target='_blank' rel='noreferrer'>\r\n                                    {link.name}\r\n                                </a>\r\n                            </Row>\r\n                        ))}\r\n                    </Col>\r\n            </Col>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default CryptoDetails\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n    const { data, isFetching } = useGetExchangesQuery();\r\n    const exchangesList = data?.data?.exchanges;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={6}>Exchanges</Col>\r\n                <Col span={6}>24h Trade Volume</Col>\r\n                <Col span={6}>Markets</Col>\r\n                <Col span={6}>Change</Col>\r\n            </Row>\r\n            <Row>\r\n                {exchangesList.map((exchange) => (\r\n                    <Col span={24}>\r\n                        <Collapse>\r\n                            <Panel\r\n                                key={exchange.id}\r\n                                showArrow={false}\r\n                                header={(\r\n                                    <Row key={exchange.id}>\r\n                                        <Col span={6}>\r\n                                            <Text><strong>{exchange.rank}.</strong></Text>\r\n                                            <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                                            <Text><strong>{exchange.name}</strong></Text>\r\n                                        </Col>\r\n                                        <Col span={6}>${millify(exchange.volume)}</Col>\r\n                                        <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                                        <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                                    </Row>\r\n                                )}\r\n                            >\r\n                                {HTMLReactParser(exchange.description || '')}\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Exchanges;","import React from 'react'\r\nimport millify from 'millify'\r\nimport { Typography, Row, Col, Statistic } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport { Cryptocurrencies, News } from '.'\r\nimport Loader from './Loader'\r\n\r\nconst { Title } = Typography;\r\n\r\n\r\n\r\nconst Homepage = () => {\r\n    const { data, isFetching } = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats;\r\n\r\n    if(isFetching) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n            <Title level={2} className='heading'>Global Crypto Stats</Title>\r\n            <Row>\r\n                <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\r\n            </Row>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className='home-title'>Top 10 Cryptocurrencies in the world</Title>\r\n                <Title level={3} className='show-more'><Link to='/cryptocurrencies'>Show More</Link></Title>\r\n            </div>\r\n            <Cryptocurrencies simplified />\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className='home-title'>Latest Crypto News</Title>\r\n                <Title level={3} className='show-more'><Link to='/news'>Show More</Link></Title>\r\n            </div>\r\n            <News simplified />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoNewsHeaders = {\r\n        'x-bingapis-sdk': 'true',\r\n        'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n        'x-rapidapi-key': '19bca11e6emshafbece8a1fbc433p1321e6jsn772b93723ed9'\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com'\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoNewsHeaders})\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({newsCategory, count}) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n        }),\r\n    }),\r\n})\r\n\r\nexport const {\r\n    useGetCryptoNewsQuery,\r\n} = cryptoNewsApi;","import React, { useState } from 'react'\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd'\r\nimport moment from 'moment'\r\n\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport Loader from './Loader'\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst demoImage = 'http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg';\r\n\r\nconst News = ({ simplified }) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency')\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 })\r\n    const { data } = useGetCryptosQuery(100);\r\n\r\n    console.log(cryptoNews);\r\n\r\n    if (!cryptoNews?.value) return <Loader />;\r\n\r\n    return (\r\n        <Row gutter={[24, 24]}>\r\n            {!simplified && (\r\n                <Col span={24}>\r\n                    <Select \r\n                        showSearch \r\n                        className='select-news' \r\n                        placeholder='Select a Crypto' \r\n                        optionFilterProp='children' \r\n                        onChange={(value) => setNewsCategory(value)} \r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n                        {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\r\n                    </Select>\r\n                </Col>\r\n            )}\r\n            {cryptoNews.value.map((newsArticle, i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className='news-card'>\r\n                        <a href={newsArticle.url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className='news-title' level={4}>{newsArticle.name}</Title>\r\n                                <img style={{ maxWidth: '200px', maxHeight: '100px' }} src={newsArticle?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\" />\r\n                            </div>\r\n                            <p>\r\n                                {newsArticle.description > 100 ? `${newsArticle.description.substring(0, 100)} ...` : newsArticle.description}\r\n                            </p>\r\n                            <div className='provider-container'>\r\n                                <div>\r\n                                    <Avatar src={newsArticle.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n                                    <Text className='provider-name'>{newsArticle.provider[0]?.name}</Text>\r\n                                </div>\r\n                                <Text>{moment(newsArticle.datePublished).startOf('ss').fromNow()}</Text>\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react'\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport { Layout, Typography, Space } from 'antd';\r\nimport { Navbar, Exchanges, Homepage, Cryptocurrencies, News, CryptoDetails } from './components';\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"navbar\">\r\n                <Navbar />\r\n            </div>\r\n            <div className=\"main\">\r\n                <Layout>\r\n                    <div className='routes'>\r\n                        <Switch>\r\n                            <Route exact path='/'>\r\n                                <Homepage />\r\n                            </Route>\r\n                            <Route exact path='/exchanges'>\r\n                                <Exchanges />\r\n                            </Route>\r\n                            <Route exact path='/cryptocurrencies'>\r\n                                <Cryptocurrencies />\r\n                            </Route>\r\n                            <Route exact path='/crypto/:coinId'>\r\n                                <CryptoDetails />\r\n                            </Route>\r\n                            <Route exact path='/news'>\r\n                                <News />\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Layout>\r\n\r\n                <div className=\"footer\">\r\n                    <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>\r\n                        Cryptoverse <br />\r\n                        All rights reserved\r\n                    </Typography.Title>\r\n                    <Space>\r\n                        <Link to='/'>Home</Link>\r\n                        <Link to='/exchanges'>Exchanges</Link>\r\n                        <Link to='/news'>News</Link>\r\n                    </Space>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n});","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Provider store={store} >\r\n            <App />\r\n        </Provider>\r\n    </Router>\r\n    , document.getElementById('root')\r\n);"],"sourceRoot":""}